{"version":3,"sources":["components/Navbar.js","components/CartCounter.js","store/actions.js","components/Products.js","components/Cart.js","App.js","reportWebVitals.js","store/rootReducer.js","index.js"],"names":["useStyles","makeStyles","theme","title","flexGrow","marginLeft","marginBottom","button","Navbar","classes","cartProducts","useSelector","state","totalCount","map","item","quantity","console","log","_jsx","children","AppBar","style","backgroundColor","elevation","_jsxs","Toolbar","Typography","variant","color","className","Link","to","IconButton","HomeIcon","Badge","badgeContent","ShoppingCartIcon","btnminus","qty","btnplus","marginRight","CartCounter","props","dispatch","useDispatch","handleQuantity","id","i","_Fragment","Button","disabled","onClick","handleDecrement","type","payload","decrementQuantity","handleIncrement","incrementQuantity","root","maxWidth","height","padding","marginTop","main","addtocart","Products","productDetails","products","data","useEffect","async","response","axios","get","catch","err","fetchProducts","Grid","container","direction","justify","alignItems","Card","CardActionArea","width","src","image","alt","CardContent","gutterBottom","component","description","CardActions","concat","addtoCart","size","btn_delete","left_btn","card","order","display","justifyContent","Cart","setDisplay","useState","selected","totalPrice","count","price","getToken","token","length","toFixed","StripeCheckout","label","billingAddress","shippingAddress","stripeKey","panelLabel","handleDelete","deleteToCart","DeleteIcon","App","BrowserRouter","Switch","Route","exact","path","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","arguments","undefined","action","find","index","findIndex","slice","cartProductUpdated","filter","cartProduct","index_","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","React","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.d0955dd2.chunk.js","sourcesContent":["import React from 'react'\nimport { AppBar, Typography, Toolbar, Badge } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core';\nimport { IconButton } from '@material-ui/core'\nimport HomeIcon from '@material-ui/icons/Home';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport { Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n\n    title: {\n        flexGrow: 1,\n        marginLeft: \"5px\",\n        marginBottom: \" 10px\",\n    },\n    button: {\n        marginBottom: \" 10px\"\n    }\n\n}))\n\nconst Navbar = () => {\n    const classes = useStyles();\n    const cartProducts = useSelector(state => state.cartProducts)\n\n    let totalCount = 0\n    cartProducts.map((item) => {\n        return totalCount += item.quantity\n    })\n    console.log(totalCount)\n    return (\n        <div>\n            <AppBar style={{ backgroundColor: \"#282c34\" }} elevation={0}>\n                <Toolbar>\n                    <Typography variant=\"h4\" color=\"inherit\">\n                        <p className=\"text-warning\">React Shopping with Redux</p>\n\n                    </Typography>\n\n                    <Link to=\"/ReduxShoppingCart\" className={classes.title}  >\n                        <IconButton style={{ color: \"white\" }} ><HomeIcon /></IconButton>\n                    </Link>\n\n                    <Link to=\"/cart\">\n\n                        <IconButton className=\"nav-link text-white\">\n\n                            <Badge badgeContent={totalCount} className={classes.button} color=\"error\">\n                                <ShoppingCartIcon color=\"inherit\" />\n                            </Badge>\n                        </IconButton>\n                    </Link>\n                </Toolbar>\n\n\n            </AppBar>\n\n\n        </div>\n    )\n}\n\n\nexport default Navbar","import React  from 'react'\nimport { useSelector } from 'react-redux'\nimport { Button } from '@material-ui/core'\nimport { useDispatch } from 'react-redux'\nimport {  decrementQuantity, incrementQuantity } from '../store/actions'\nimport { makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles({\n    btnminus: {\n        marginLeft:\"13%\"\n    },\n    qty:{\n        marginLeft:\"7%\"\n    },\n    btnplus:{\n        marginLeft:\"10%\",\n        marginRight:\"9%\"\n    }\n})\n\nconst CartCounter = (props) => {\n\n    const classes = useStyles();\n    const cartProducts = useSelector(state => state.cartProducts)\n   \n\n    const dispatch = useDispatch();\n\n    const handleIncrement = (id) => {\n        dispatch(incrementQuantity(id))\n    }\n\n    const handleDecrement = (id) => {\n        dispatch(decrementQuantity(id))\n    }\n    const handleQuantity = (id) => {\n      \n        for (let i of cartProducts) {\n            if (i.id === id) {\n                return i.quantity;\n            }\n\n        }\n        return 0\n    }\n  \n    \n    return (\n        <>\n            <Button className={classes.btnminus} disabled = {handleQuantity(props.id) === 0 ? true:false} onClick={ () => handleDecrement(props.id)} variant=\"outlined\">-</Button>\n            <span className={classes.qty}><b>Quantity: {handleQuantity(props.id)}</b></span>\n            <Button className={classes.btnplus} disabled = {handleQuantity(props.id) === 0 ? true :false} onClick={() => handleIncrement(props.id)} variant=\"outlined\">+</Button>\n        </>\n\n    )\n}\n\nexport default CartCounter","\nexport const addProducts = (products) => ({\n    type: \"ADD_PRODUCTS\",\n    payload: products\n})\n\n\nexport const addToCart = (product) => ({\n    type: \"ADD_TO_CART\",\n    payload: product,\n})\n\nexport const deleteToCart = (id) => ({\n    type: \"DELETE_ITEM\",\n    payload: id\n})\n\nexport const incrementQuantity = (id) => ({\n    type: \"INCREMENT_QTY\",\n    payload: id\n})\n\nexport const decrementQuantity = (id) => ({\n    type: \"DECREMENT_QTY\",\n    payload: id\n})\n\nexport const deleteCartItems = () => ({\n    type:\"DELETE_CART\"\n})","import React, { useEffect } from 'react'\nimport axios from 'axios'\nimport { addProducts, addToCart } from '../store/actions'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid } from '@material-ui/core';\nimport CartCounter from './CartCounter';\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 400,\n        height: \"100%\",\n        padding: 10,\n        marginLeft: 20,\n        marginTop: 30\n    },\n    main: {\n        flexGrow: 1\n    },\n    addtocart:{\n      marginLeft:\"34%\"\n    }\n});\n\nconst Products = () => {\n\n    const classes = useStyles()\n    const dispatch = useDispatch();\n    const productDetails = useSelector(state => state.products.data)\n\n    const fetchProducts = async () => {\n        const response = await axios.get('https://fakestoreapi.com/products').catch(err => console.log(err))\n        dispatch(addProducts(response))\n    }\n\n    useEffect(() => {\n        fetchProducts()\n    }, []);\n\n    const addtoCart = async (id) => {\n        console.log(id)\n        const response = await axios.get(`https://fakestoreapi.com/products/${id}`).catch(err => console.log(err))\n        const data = response.data;\n        data.quantity = 1;\n        console.log(data)\n        dispatch(addToCart(data))\n    }\n\n    if (productDetails)\n        return (\n            <div className={classes.main}>\n                <br /> <br />\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" >\n                    {productDetails.map(item =>\n\n                        <Card key={item.id} className={classes.root}>\n                            <CardActionArea>\n                                <img width=\"350px\" height=\"400px\" src={item.image} alt={item.title} />\n                                <CardContent>\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                        {item.title}\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                        {item.description}\n                                    </Typography>\n\n                                </CardContent>\n                            </CardActionArea>\n                            <CardActions>\n                                <Button className={classes.addtocart} onClick={() => addtoCart(item.id)} size=\"small\" color=\"primary\" variant=\"outlined\">\n                                    Add to Cart\n                                </Button>\n                            </CardActions>\n                            \n                            <CartCounter id ={item.id} />\n                        </Card>\n\n                    )}\n                </Grid>\n            </div>\n        )\n    else {\n        return (<>\n            <br /> <br /> <br />\n            <h1>Loading...</h1>\n        </>)\n    }\n}\n\nexport default Products;","import React , { useState }from 'react'\nimport { Link } from 'react-router-dom' \nimport { useSelector } from 'react-redux';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Button } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { deleteToCart  , deleteCartItems } from '../store/actions';\nimport { Card } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\nimport CartCounter from './CartCounter';\nimport StripeCheckout from 'react-stripe-checkout'\nconst useStyles = makeStyles({\n    root: {\n        width: \"350px\",\n        marginTop: \"20px\",\n        marginLeft:\"60px\",\n        marginRight:\"10px\"\n    },\n    btn_delete: {\n        marginLeft: \"50px\"\n    },\n    qty: {\n        marginLeft: \"10px\",\n        marginRight: \"15px\"\n    },\n    left_btn: {\n        marginLeft: \"10%\"\n    },\n    card:{\n        marginRight: \"10%\",\n        marginBottom:\"3%\",\n        height:\"90%\",\n        width:\"400px\"\n        },\n    order:{\n      display:\"flex\",\n      justifyContent:\"center\"\n    }\n\n})\nconst Cart = () => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const [display , setDisplay] = useState(false);\n    const handleDelete = (id) => {\n        dispatch(deleteToCart(id))\n    }\n\n    \n\n    \n    const selected = useSelector(state => state.cartProducts)\n\n    let totalPrice = 0;\n    let count = 0\n    for (let i of selected) {\n        totalPrice += (i.price * i.quantity)\n        count += i.quantity\n    }\n\n    const getToken = (token) => {\n        console.log(token);\n        setDisplay(true);\n        dispatch(deleteCartItems())\n        \n    }\n\n    if (selected.length > 0 && display === false) {\n        return (\n            <>\n                <br />\n                <br />\n                <br />\n                <div className={classes.order}> \n                <h2>Your cart has {count} items and the total price is &#8377; {totalPrice.toFixed(2)}</h2>\n                </div>\n                \n                <div className={classes.order}>\n                    \n                    <StripeCheckout \n                    label=\"Place your order here\"\n                    billingAddress\n                    shippingAddress\n                    stripeKey=\"pk_test_51BTUDGJAJfZb9HEBwDg86TN1KNprHjkfipXmEDMb0gSCassK5T3ZfxsAbcgKVmAIXF7oZ6ItlZZbXO6idTHE67IM007EwQ4uN3\"\n                    panelLabel = {`Pay ${totalPrice}`}\n                    token={getToken}\n                    />\n                </div>\n                <div>\n                <Grid  container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\n                {selected.map(item =>\n                    <div className={classes.root} key={item.id}>\n\n                        <Card className={classes.card}>\n\n                            <Typography variant=\"h5\" color=\"textSecondary\" component=\"h2\">\n                                {item.title}\n\n                            </Typography>\n\n                            <img height=\"100px\" width=\"100px\" src={item.image} alt={item.title} />\n                            <Button className={classes.btn_delete} variant=\"contained\" color=\"secondary\" onClick={() => handleDelete(item.id)}>Delete<DeleteIcon />\n                            </Button>\n\n\n                            <p className=\"text-danger\"><b>&#8377;{item.price}</b></p>\n                            <div><CartCounter id ={ item.id}/></div>\n                            <br />\n                            <p className=\"text-danger\" style={{ marginLeft: \"20%\" }}>Total amount: <b>&#8377;{(item.quantity * item.price).toFixed(2)}</b></p>\n\n                        </Card>\n\n                    </div>)}\n                    </Grid>\n                    \n                    </div>\n\n            </>)\n    }\n    else if(display === true){\n      \n        return(\n            <>\n                <br/><br /><br />\n                <h1 className=\"text-success\">Successfully booked</h1>\n                <Link to=\"/\" className=\"btn btn-primary\">Go to Home</Link>\n            </>\n        )\n    }\n    else {\n        return (\n            <div>\n                <br />\n                <br />\n                <br />\n                <h1>Your cart is empty</h1>\n            </div>\n        )\n    }\n\n\n}\n\nexport default Cart;","import './App.css';\nimport Navbar from './components/Navbar';\nimport Products from './components/Products';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Cart from './components/Cart'\nfunction App() {\n  return (\n    <>\n      <BrowserRouter>\n        <div>\n          <Navbar />\n\n        </div>\n\n\n        <Switch>\n          <Route exact path='/ReduxShoppingCart' component={Products} />\n          <Route exact path='/cart' component={Cart} />\n\n        </Switch>\n      </BrowserRouter>\n    </>\n  )\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\n    products: [],\n    cartProducts: []\n}\nconst rootReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"ADD_PRODUCTS\":\n            return { ...state, products: action.payload }\n        case \"ADD_TO_CART\":\n            if (state.cartProducts.find(item => item.id === action.payload.id)) {\n                let index = state.cartProducts.findIndex(index => index.id === action.payload.id)\n                return {\n                    ...state,\n                    cartProducts:\n                        [...state.cartProducts.slice(0, index), {\n                            ...state.cartProducts[index], quantity: state.cartProducts[index].quantity + 1\n                        }, ...state.cartProducts.slice(index + 1)]\n\n                }\n            }\n            else {\n                return { ...state, cartProducts: [...state.cartProducts, action.payload] }\n            }\n        case \"DELETE_ITEM\":\n            const cartProductUpdated = state.cartProducts.filter((cartProduct) => cartProduct.id !== action.payload)\n            console.log(cartProductUpdated)\n            return { ...state, cartProducts: cartProductUpdated }\n\n        case \"INCREMENT_QTY\":\n            let index = state.cartProducts.findIndex(index => index.id === action.payload)\n            \n            return {\n                ...state,\n                cartProducts:\n                    [...state.cartProducts.slice(0, index), {\n                        ...state.cartProducts[index], quantity: state.cartProducts[index].quantity + 1\n                    }, ...state.cartProducts.slice(index + 1)]\n\n            }\n        \n        \n        case \"DECREMENT_QTY\":\n            let index_ = state.cartProducts.findIndex(index => index.id === action.payload)\n            if (state.cartProducts[index_].quantity > 1) {\n\n                return {\n                    ...state,\n                    cartProducts:\n                        [\n                            ...state.cartProducts.slice(0, index_), {\n                                ...state.cartProducts[index_], quantity: state.cartProducts[index_].quantity - 1\n\n                            }, ...state.cartProducts.slice(index_ + 1)\n                        ]\n                }\n            }\n            else if (state.cartProducts[index_].quantity === 1) {\n                let cartProductUpdated = state.cartProducts.filter(\n                    (item) => item.id !== state.cartProducts[index_].id)\n                return {\n                    ...state, cartProducts: cartProductUpdated\n                }\n            }\n            else {\n                return state\n            }\n        case \"DELETE_CART\":\n            return {\n                ...state , cartProducts:[]\n            }\n        default:\n            return state;\n    }\n}\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/rootReducer';\n\n\nconst store = createStore(rootReducer ,  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store ={ store }>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}